server.port=9090

externalProviders.config.path = classpath:/externalProviders.yml

# Details needed so that we may check tokens presented to us by clients. This application uses them to authenticate via
# Basic authentication with the oAuth server.
authz.checkToken.endpoint.url=http://localhost:8080/oauth/check_token
authz.checkToken.clientId=vootservice
authz.checkToken.secret=secret

oidc.checkToken.endpoint.url=http://localhost:8080/introspect
oidc.checkToken.clientId=https@//oidc.localhost.surfconext.nl
oidc.checkToken.secret=secret

checkToken.cache=true
# 10 minutes cache for tokens
checkToken.cache.duration.milliSeconds=600000
# check every 5 minutes for expired tokens in the cache
checkToken.cache.expiryIntervalCheck.milliseconds=300000

# Grouper database
spring.datasource.url=jdbc:mysql://localhost/grouper_local?autoReconnect=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.validation-query=SELECT 1
spring.datasource.testWhileIdle=true

# Teams database
spring.secondDatasource.url=jdbc:mysql://localhost/grouper_local?autoReconnect=true&useSSL=false&serverTimezone=UTC
spring.secondDatasource.username=root
spring.secondDatasource.password=
spring.secondDatasource.driverClassName=com.mysql.jdbc.Driver
spring.secondDatasource.validation-query=SELECT 1
spring.secondDatasource.testWhileIdle=true

# Feature toggle for searching for linked GrouperGroups and ExternalGroups
support.linkedGrouperExternalGroups=true

#only tests may override this
flyway.enabled=false

endpoints.enabled=false
endpoints.health.enabled=true
endpoints.info.enabled=true

info.build.artifact=@project.artifactId@
info.build.version=@project.version@
